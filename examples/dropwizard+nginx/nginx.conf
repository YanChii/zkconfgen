user nginx;
worker_processes 1;
error_log /var/log/nginx/error.log warn;
pid /run/nginx.pid;

events {
	worker_connections 1024;
}

http {
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
		'$status $body_bytes_sent "$http_referer" '
		'"$http_user_agent" "$ssl_client_s_dn" "$http_x_forwarded_for" "$upstream_addr" "$host"';

	access_log  /var/log/nginx/access.log  main;

	sendfile			on;
	tcp_nopush			on;
	tcp_nodelay			on;
	keepalive_timeout	65;
	types_hash_max_size	2048;
	#gzip				on;
	client_max_body_size	16M;

	include			/etc/nginx/mime.types;
	default_type	application/octet-stream;

	# Load modular configuration files from the /etc/nginx/conf.d directory.
	# See http://nginx.org/en/docs/ngx_core_module.html#include
	# for more information.
	include /etc/nginx/conf.d/*.conf;

	proxy_next_upstream error timeout invalid_header;
	proxy_connect_timeout 1s;
	#proxy_set_header	Host			$host;
	proxy_set_header	X-Real-IP		$remote_addr;
	proxy_set_header	X-Forwarded-For	$proxy_add_x_forwarded_for;
	proxy_buffers		256	4k;
	proxy_pass_header	Referer;
	proxy_pass_header	Origin;

	# UPSTREAM SERVICES LIST GENERATED FROM ZOOKEEPER
	include /etc/nginx/dropwizard-upstream.conf

	# SERVICES PROXY SERVER INTRANET
	server {
		listen		80;
		listen		[::]:80;
		server_name	svcproxy-intra.example.com;
		root	 /usr/share/nginx/html;		# use empty/nonexistent directory because we don't server any local content

		# URL SERVICES LIST
		include /etc/nginx/dropwizard-intranet.conf
	}

	# SERVICES PROXY SERVER SSL-DMZ
	server {
		listen		443 ssl;
		listen		[::]:443 ssl;
		server_name	svcproxy-dmz.example.com;
		root	 /usr/share/nginx/html;		# use empty/nonexistent directory because we don't server any local content

		# redirect plain HTTP requests to HTTPS (otherwise nginx will respond also to HTTP requests on this port):
		error_page 497 https://$host:$server_port$request_uri;

		ssl_certificate			/etc/nginx/ssl/svcproxy-dmz.example.com.pem;
		ssl_certificate_key		/etc/nginx/ssl/svcproxy-dmz.example.com.key;
		ssl_client_certificate	/etc/nginx/ssl/svcproxyCA-chain.pem;
		# allow connection only for clients with proper client certificate
		ssl_verify_client		on;
		ssl_verify_depth		2;
		proxy_set_header		X-SSL-CLIENT-DN		$ssl_client_s_dn;
		proxy_set_header		X-SSL-CLIENT-VERIFY	$ssl_client_verify;
		ssl_session_timeout		1d;
		ssl_session_cache		shared:SSL:50m;
		ssl_session_tickets		off;
		ssl_protocols			TLSv1.1 TLSv1.2;
		ssl_ciphers				'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
		ssl_prefer_server_ciphers	on;

		# URL SERVICES LIST
		include /etc/nginx/dropwizard-intranet.conf
	}

	# SERVICES PROXY SERVER FOR ESIGN
	server {
		listen		444 ssl;
		listen		[::]:444 ssl;
		server_name	esign.example.com;
		root	 /usr/share/nginx/html;		# use empty/nonexistent directory because we don't server any local content

		# redirect plain HTTP requests to HTTPS (otherwise nginx will respond also to HTTP requests on this port):
		error_page 497 https://$host:$server_port$request_uri;

		ssl_certificate			/etc/nginx/ssl/esign.example.com.pem;
		ssl_certificate_key		/etc/nginx/ssl/esign.example.com.key;
		ssl_client_certificate	/etc/nginx/ssl/esignCA-chain.pem;
		# allow connection only for clients with proper client certificate
		ssl_verify_client		on;
		ssl_verify_depth		2;
		proxy_set_header		X-SSL-CLIENT-DN		$ssl_client_s_dn;
		proxy_set_header		X-SSL-CLIENT-VERIFY	$ssl_client_verify;
		ssl_session_timeout		1d;
		ssl_session_cache		shared:SSL:50m;
		ssl_session_tickets		off;
		ssl_protocols			TLSv1.1 TLSv1.2;
		ssl_ciphers				'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK';
		ssl_prefer_server_ciphers	on;

		# URL SERVICES LIST
		include /etc/nginx/dropwizard-esign.conf
	}

}
